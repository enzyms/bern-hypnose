---
import Card from './Card.astro';
import siteConfig, { type Link } from '../data/site-config';

type Props = {
    id: string;
    exclude?: string[];
    columns?: number;
};

const { id, exclude = [], columns = 2 } = Astro.props;

// Recursive function to find the item by id
function findItemById(items: Link[] | undefined, id: string): any {
    if (!items) {
        return null;
    }
    for (const item of items) {
        if (item.id === id) {
            return item;
        }
        if (item.subPages) {
            const found = findItemById(item.subPages, id);
            if (found) return found;
        }
    }
    return null;
}

const parentItem = findItemById(siteConfig.headerNavLinks, id);

let subPages = parentItem?.subPages || [];

if (exclude.length > 0) {
    subPages = subPages.filter((subPage: { href: string }) => !exclude.includes(subPage.href));
}

const gridColumnsClass = columns === 1 ? 'grid-cols-1' : columns === 2 ? 'grid-cols-2' : 'grid-cols-2 sm:grid-cols-3';
const gridClasses = `grid ${gridColumnsClass} gap-4 not-prose`;

const imgWidth = columns === 2 ? 600 : columns === 3 ? 400 : 800;
---

{
    subPages.length > 0 && (
        <nav class="py-4 md:py-6">
            <ul class={gridClasses}>
                {subPages.map((subPage: { href: any; image: any; text: any }) => (
                    <li>
                        <Card href={subPage.href} image={subPage.image} imageWidth={imgWidth} title={subPage.text} />
                    </li>
                ))}
            </ul>
        </nav>
    )
}
